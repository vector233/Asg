name: Build and Release

on:
  push:
    tags:
      - 'v*' # 当推送带有 v 前缀的标签时触发，例如 v1.0.0

# 添加权限设置
permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            output_name: Asg-macos
            asset_name: Asg-macos
          - os: windows-latest
            output_name: Asg-windows.exe
            asset_name: Asg-windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      # 为 macOS 安装依赖
      - name: Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install glfw xquartz
          echo "CGO_ENABLED=1" >> $GITHUB_ENV

      # 为 Windows 安装依赖
      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          choco install mingw
          echo "CGO_ENABLED=1" >> $env:GITHUB_ENV

      - name: Install dependencies
        run: go mod download

      # 添加标签信息到构建中
      - name: Get tag name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        shell: bash

      - name: Build for Chinese (macOS/Windows)
        run: |
          go build -tags ci -ldflags="-X 'github.com/vector233/Asg/internal/i18n.DefaultLang=zh' -X 'github.com/vector233/Asg/internal/version.Version=${{ env.TAG_NAME }}'" -o ${{ matrix.output_name }}-zh
        env:
          GOOS: ${{ matrix.os == 'macos-latest' && 'darwin' || 'windows' }}
          GOARCH: amd64
          CGO_ENABLED: 1

      - name: Build for English (macOS/Windows)
        run: |
          go build -tags ci -ldflags="-X 'github.com/vector233/Asg/internal/i18n.DefaultLang=en' -X 'github.com/vector233/Asg/internal/version.Version=${{ env.TAG_NAME }}'" -o ${{ matrix.output_name }}-en
        env:
          GOOS: ${{ matrix.os == 'macos-latest' && 'darwin' || 'windows' }}
          GOARCH: amd64
          CGO_ENABLED: 1

      - name: Upload Chinese build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}-zh
          path: ${{ matrix.output_name }}-zh

      - name: Upload English build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}-en
          path: ${{ matrix.output_name }}-en

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Asg-macos-zh/Asg-macos-zh
            Asg-macos-en/Asg-macos-en
            Asg-windows-zh/Asg-windows.exe-zh
            Asg-windows-en/Asg-windows.exe-en
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}